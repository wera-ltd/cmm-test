import _ from"./m9uduu0_.js";import{g as v,r as i,K as u,B as V,y as g,o as w,w as T,d as b,t as j,j as c,k as M,m as C}from"./BzAjAAht.js";const D=v({__name:"TreeMultiSelect",props:{options:{type:Array,default:()=>[]},modelValue:{type:Array,default:()=>[]}},emits:["update:modelValue"],setup(y,{emit:f}){const l=y,m=f,h=[{label:"전체",key:"all",children:l.options}],a=i([]),n=u(()=>{const e=Object.entries(a.value).filter(([t,s])=>s.checked===!0).map(([t])=>t);return l.options.flatMap(t=>t.children||[]).filter(t=>e.includes(t.key))}),k=u(()=>{if(!n.value||n.value.length===0)return"선택 없음";const e=new Map;return n.value.forEach(s=>{const o=l.options.find(r=>{var d;return(d=r.children)==null?void 0:d.some(K=>K.key===s.key)});if(o){const r=e.get(o.label)||0;e.set(o.label,r+1)}}),Array.from(e.entries()).map(([s,o])=>`${s}(${o}개)`).join(", ")}),p=i({all:!0}),x=e=>{p.value=e};return V(n,e=>{m("update:modelValue",e)}),(e,t)=>{const s=_;return w(),g(s,{modelValue:c(a),"onUpdate:modelValue":t[0]||(t[0]=o=>M(a)?a.value=o:null),options:h,"onUpdate:expandedKeys":x,selectionMode:"checkbox",filter:"",filterMode:"lenient",placeholder:"선택 없음",class:"w-full",expandedKeys:c(p),pt:{panel:"z-[1200]!",pcfiltercontainer:"z-[1200]! w-full"}},{value:T(o=>[b(j(c(k)),1)]),_:1},8,["modelValue","expandedKeys"])}}});function O(){return C}export{D as _,O as u};
